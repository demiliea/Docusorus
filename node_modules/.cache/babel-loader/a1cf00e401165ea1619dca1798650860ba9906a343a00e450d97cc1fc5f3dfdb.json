{"ast":null,"code":"import React,{useState,useEffect}from'react';import LandingPage from'./components/LandingPage';import FlexibleDevXConsole from'./components/FlexibleDevXConsole';import Keycloak from'keycloak-js';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[currentPage,setCurrentPage]=useState('landing');const[authMode,setAuthMode]=useState('guest');const[isAuthenticated,setIsAuthenticated]=useState(false);const[username,setUsername]=useState();// Check if user is already authenticated on app load\nuseEffect(()=>{const checkExistingAuth=async()=>{try{const keycloak=new Keycloak({url:'https://keycloak.eu-nordics-sto-test.dstny.d4sp.com/auth',realm:'40aa6bdb-11e5-49b7-8af8-6afe2111e514',clientId:'sam'});const authenticated=await keycloak.init({onLoad:'check-sso',checkLoginIframe:false,pkceMethod:'S256'});if(authenticated&&keycloak.tokenParsed){setIsAuthenticated(true);setUsername(keycloak.tokenParsed.preferred_username);setAuthMode('authenticated');}}catch(error){console.debug('Auth check failed:',error);// Continue as guest - this is expected if Keycloak is not available\n}};checkExistingAuth();},[]);const handleSignIn=()=>{setAuthMode('authenticated');setCurrentPage('console');};const handleContinueWithoutSignIn=()=>{setAuthMode('placeholder');setCurrentPage('console');};const handleBackToLanding=()=>{setCurrentPage('landing');};if(currentPage==='landing'){return/*#__PURE__*/_jsx(LandingPage,{onSignIn:handleSignIn,onContinueWithoutSignIn:handleContinueWithoutSignIn,isAuthenticated:isAuthenticated,username:username});}return/*#__PURE__*/_jsx(FlexibleDevXConsole,{mode:authMode,onBackToLanding:handleBackToLanding});};export default App;","map":{"version":3,"names":["React","useState","useEffect","LandingPage","FlexibleDevXConsole","Keycloak","jsx","_jsx","App","currentPage","setCurrentPage","authMode","setAuthMode","isAuthenticated","setIsAuthenticated","username","setUsername","checkExistingAuth","keycloak","url","realm","clientId","authenticated","init","onLoad","checkLoginIframe","pkceMethod","tokenParsed","preferred_username","error","console","debug","handleSignIn","handleContinueWithoutSignIn","handleBackToLanding","onSignIn","onContinueWithoutSignIn","mode","onBackToLanding"],"sources":["/workspace/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LandingPage from './components/LandingPage';\nimport FlexibleDevXConsole from './components/FlexibleDevXConsole';\nimport Keycloak from 'keycloak-js';\nimport './App.css';\n\ntype AppState = 'landing' | 'console';\ntype AuthMode = 'authenticated' | 'placeholder' | 'guest';\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<AppState>('landing');\n  const [authMode, setAuthMode] = useState<AuthMode>('guest');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState<string | undefined>();\n\n  // Check if user is already authenticated on app load\n  useEffect(() => {\n    const checkExistingAuth = async () => {\n      try {\n        const keycloak = new Keycloak({\n          url: 'https://keycloak.eu-nordics-sto-test.dstny.d4sp.com/auth',\n          realm: '40aa6bdb-11e5-49b7-8af8-6afe2111e514',\n          clientId: 'sam',\n        });\n\n        const authenticated = await keycloak.init({\n          onLoad: 'check-sso',\n          checkLoginIframe: false,\n          pkceMethod: 'S256',\n        });\n\n        if (authenticated && keycloak.tokenParsed) {\n          setIsAuthenticated(true);\n          setUsername(keycloak.tokenParsed.preferred_username as string);\n          setAuthMode('authenticated');\n        }\n      } catch (error) {\n        console.debug('Auth check failed:', error);\n        // Continue as guest - this is expected if Keycloak is not available\n      }\n    };\n\n    checkExistingAuth();\n  }, []);\n\n  const handleSignIn = () => {\n    setAuthMode('authenticated');\n    setCurrentPage('console');\n  };\n\n  const handleContinueWithoutSignIn = () => {\n    setAuthMode('placeholder');\n    setCurrentPage('console');\n  };\n\n  const handleBackToLanding = () => {\n    setCurrentPage('landing');\n  };\n\n  if (currentPage === 'landing') {\n    return (\n      <LandingPage\n        onSignIn={handleSignIn}\n        onContinueWithoutSignIn={handleContinueWithoutSignIn}\n        isAuthenticated={isAuthenticated}\n        username={username}\n      />\n    );\n  }\n\n  return (\n    <FlexibleDevXConsole\n      mode={authMode}\n      onBackToLanding={handleBackToLanding}\n    />\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,mBAAmB,KAAM,kCAAkC,CAClE,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAClC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAKnB,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAW,SAAS,CAAC,CACnE,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAW,OAAO,CAAC,CAC3D,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAqB,CAAC,CAE9D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAb,QAAQ,CAAC,CAC5Bc,GAAG,CAAE,0DAA0D,CAC/DC,KAAK,CAAE,sCAAsC,CAC7CC,QAAQ,CAAE,KACZ,CAAC,CAAC,CAEF,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CACxCC,MAAM,CAAE,WAAW,CACnBC,gBAAgB,CAAE,KAAK,CACvBC,UAAU,CAAE,MACd,CAAC,CAAC,CAEF,GAAIJ,aAAa,EAAIJ,QAAQ,CAACS,WAAW,CAAE,CACzCb,kBAAkB,CAAC,IAAI,CAAC,CACxBE,WAAW,CAACE,QAAQ,CAACS,WAAW,CAACC,kBAA4B,CAAC,CAC9DhB,WAAW,CAAC,eAAe,CAAC,CAC9B,CACF,CAAE,MAAOiB,KAAK,CAAE,CACdC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAEF,KAAK,CAAC,CAC1C;AACF,CACF,CAAC,CAEDZ,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAe,YAAY,CAAGA,CAAA,GAAM,CACzBpB,WAAW,CAAC,eAAe,CAAC,CAC5BF,cAAc,CAAC,SAAS,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAuB,2BAA2B,CAAGA,CAAA,GAAM,CACxCrB,WAAW,CAAC,aAAa,CAAC,CAC1BF,cAAc,CAAC,SAAS,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAwB,mBAAmB,CAAGA,CAAA,GAAM,CAChCxB,cAAc,CAAC,SAAS,CAAC,CAC3B,CAAC,CAED,GAAID,WAAW,GAAK,SAAS,CAAE,CAC7B,mBACEF,IAAA,CAACJ,WAAW,EACVgC,QAAQ,CAAEH,YAAa,CACvBI,uBAAuB,CAAEH,2BAA4B,CACrDpB,eAAe,CAAEA,eAAgB,CACjCE,QAAQ,CAAEA,QAAS,CACpB,CAAC,CAEN,CAEA,mBACER,IAAA,CAACH,mBAAmB,EAClBiC,IAAI,CAAE1B,QAAS,CACf2B,eAAe,CAAEJ,mBAAoB,CACtC,CAAC,CAEN,CAAC,CAED,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}